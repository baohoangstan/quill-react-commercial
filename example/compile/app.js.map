{"version":3,"sources":["../app.js"],"names":["App","quill","React","useRef","useState","delta","setDelta","initContent","getQuill","quillIns","current","quillChange","old","source","console","log","JSON","stringify","getContents","window","RichTextEditor","table","codeHighlight","imageHandler","imgUploadApi","formData","request","apiURL","ajaxFormPostOptions","then","response","url","uploadFailCB","error","height","domContainer","document","querySelector","root","ReactDOM","createRoot","render"],"mappings":";;;;;;;;;;;;;;AACA,IAAMA,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAMC,KAAK,GAAGC,KAAK,CAACC,MAAN,CAAa,EAAb,CAAd;;AACA,wBAA0BD,KAAK,CAACE,QAAN,CAAe,EAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,WAAW,GAAG,EAApB;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC7BR,IAAAA,KAAK,CAACS,OAAN,GAAgBD,QAAhB;AACD,GAFD;;AAGA,MAAME,WAAW,GAAG,SAAdA,WAAc,CAACN,KAAD,EAAQO,GAAR,EAAaC,MAAb,EAAwB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BV,KAA7B,EAAoCO,GAApC,EAAyCC,MAAzC;AACAP,IAAAA,QAAQ,CAACU,IAAI,CAACC,SAAL,CAAehB,KAAK,CAACS,OAAN,CAAcQ,WAAd,EAAf,CAAD,CAAR;AACD,GAHD;;AAIAJ,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ,EAAoBA,MAAM,CAACC,cAA3B;AACA,MAAMA,cAAc,GAAGD,MAAM,CAACC,cAAP,WAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,aAAa,EAAE,IAFR;AAGPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,YAAY,EAAE,sBAACC,QAAD;AAAA,iBACZ;AACAC,YAAAA,OAAO,CAACC,MAAM,CAAC,WAAD,CAAP,EAAsBC,mBAAmB,CAACH,QAAD,CAAzC,CAAP,CAA4DI,IAA5D,CACE,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACC,GAAvB;AAAA,aADF;AAFY;AAAA,SADF;AAMZC,QAAAA,YAAY,EAAE;AAAA,iBAAMlB,OAAO,CAACmB,KAAR,CAAc,QAAd,CAAN;AAAA;AANF;AAHP,KAFX;AAcE,IAAA,QAAQ,EAAEzB,QAdZ;AAeE,IAAA,OAAO,EACL;AACAD,IAAAA,WAjBJ;AAmBE,IAAA,QAAQ,EAAEI;AAnBZ,IADF,eAsBE;AAAK,IAAA,KAAK,EAAE;AAACuB,MAAAA,MAAM,EAAE;AAAT;AAAZ,KAA4B7B,KAA5B,CAtBF,CADF;AA0BD,CAxCD;;AAyCA,IAAM8B,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAArB;AACA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,UAAT,CAAoBL,YAApB,CAAb;AACAG,IAAI,CAACG,MAAL,eAAY,oBAAC,GAAD,OAAZ","sourcesContent":["\nconst App = () => {\n  const quill = React.useRef({});\n  const [delta, setDelta] = React.useState('');\n  const initContent = '';\n  const getQuill = (quillIns) => {\n    quill.current = quillIns;\n  };\n  const quillChange = (delta, old, source) => {\n    console.log('quill-change:', delta, old, source);\n    setDelta(JSON.stringify(quill.current.getContents()));\n  };\n  console.log(window, window.RichTextEditor);\n  const RichTextEditor = window.RichTextEditor.default;\n\n  return (\n    <div className=\"App\">\n      <RichTextEditor\n        readOnly={false}\n        modules={{\n          table: {},\n          codeHighlight: true,\n          imageHandler: {\n            imgUploadApi: (formData) =>\n              // console.log(apiURL('uploadImg'))\n              request(apiURL('uploadImg'), ajaxFormPostOptions(formData)).then(\n                (response) => response.url,\n              ),\n            uploadFailCB: () => console.error('图片上传失败'),\n          },\n        }}\n        getQuill={getQuill}\n        content={\n          // 初始化笔记内容，而不能直接使用activeNote.content，因为当更新或保存会重新渲染导致内容重置到保存时刻，光标变到开头\n          initContent\n        }\n        onChange={quillChange}\n      />\n      <div style={{height: 200}}>{delta}</div>\n    </div>\n  );\n}\nconst domContainer = document.querySelector('#root');\nconst root = ReactDOM.createRoot(domContainer);\nroot.render(<App />);\n"],"file":"app.js"}