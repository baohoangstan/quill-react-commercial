'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _baseToString = require('./_baseToString.js');
var _castSlice = require('./_castSlice.js');
var _charsEndIndex = require('./_charsEndIndex.js');
var _stringToArray = require('./_stringToArray.js');
var toString = require('./toString.js');
var _trimmedEndIndex = require('./_trimmedEndIndex.js');

/**
 * Removes trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimEnd('  abc  ');
 * // => '  abc'
 *
 * _.trimEnd('-_-abc-_-', '_-');
 * // => '-_-abc'
 */
function trimEnd(string, chars, guard) {
  string = toString.default(string);
  if (string && (guard || chars === undefined)) {
    return string.slice(0, _trimmedEndIndex.default(string) + 1);
  }
  if (!string || !(chars = _baseToString.default(chars))) {
    return string;
  }
  var strSymbols = _stringToArray.default(string),
      end = _charsEndIndex.default(strSymbols, _stringToArray.default(chars)) + 1;

  return _castSlice.default(strSymbols, 0, end).join('');
}

exports.default = trimEnd;
